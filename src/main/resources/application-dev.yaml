spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    open-in-view: false
    generate-ddl: false
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  flyway:
    locations:
      - classpath:db/migration/{vendor}
    baseline-on-migrate: true
    table: authversion
    baseline-version: 0
    user: cigars
    password: cigars
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  rabbitmq:
    host: amqp-broker
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        default-requeue-rejected: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_USERNAME}
    password: ${GOOGLE_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

rsa:
  private_key: classpath:certs/private.pem
  public_key: classpath:certs/public.pem

cloudinary:
  cloud_name: ${CLOUDINARY_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}

jwt:
  access_token_lifespan: 300
  refresh_token_lifespan: 86400